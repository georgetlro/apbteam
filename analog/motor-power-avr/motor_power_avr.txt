=================
 Motor Power AVR
=================
:Author: PP

- La carte est pilotable soit par RS232, soit par bus SPI 5V, soit par
  commande analogique (ou PWM > 20kHz). Les liaisons séries sont
  bidirectionelles et permettent de remonter des infos sur l'état de la carte. 

- le connecteur micromatch en entrée est un 10 points. Il contient tous les
  signaux de commande (SPI, RS232, analogique/PWM)

- le connecteur de DEV contient le SPI pour la programation ISP et le RS232

- le pinout des connecteurs est étudié pour que les signaux rapides (SPI)
  soient situés proches de masses HF (GND ou signaux lents). Les signaux RX232
  sont découplés à la masse par une capa de 1nF dans ce but.

- il subsite 4 straps à câble filairement. Ces straps sont des signaux de
  commande des PWM. Ils vont aux drivers de MOS. Leur cablage par strap est
  volontaire : il s'agit de ne pas couper le plan de masse sous les pistes de
  puissance qui supportent de très forts dI/dt et qui donc doivent être
  proches d'un signal de retour de masse. Si on passait une piste dans le
  plan, celà créerait une fente qui augmenterait l'impédance du plan à cet
  endroit jusqu'à atteindre quelques nano-henrys qui, avec des dI/dt de 15A en
  30ns (temps de montée typ des MOS, soit une fréquence équivalente de 10MHz),
  pourrait créer des ddp jusqu'à 1V voire un peu plus. Bon, en fait, c'est la
  règle CEM de base : ne jamais fendre les plans de masse surtout en présence
  de forts dI/dT. (TODO : compléter le fichier excel de calcul)

- La carte est équipée de 2 capteurs de température pour monitorer la
  température de chacun des deux ponts en H

- La carte fixe elle-même le courant max autorisé dans les ponts. Les courants
  max peuvent être différents entre les deux ponts (utile par ex si on utilise
  la carte pour driver deux moteurs d'accessoires). Cette limite en courant
  est fixée par une tension analogique produite par une PWM de l'AVR (Vref_L
  et Vref_R). Quand, sous l'effet du courant, la tension produite sur le shunt
  dans une branche du pont dépasse le Vref, le comparateur force le signal
  LIM_R ou LIM_L à 0 ce qui déclenche une interruption. Le soft relache alors
  tous les MOSFETS.

- La carte monitore la tension de batterie filtrée à 2,5ms. Elle peut par
  exemple limiter le courant dans les ponts en cas de baisse trop forte de la
  tension de batterie, ou renvoyer un signal "low batt" à la carte-mère

- La carte dispose d'une ligne de spare pour IT ou pour autre...

- On pilote chaque MOS indépendament afin de pouvoir appliquer en soft un
  dead-time entre les commutations (on coupe un MOS, on attend, et on allume
  l'autre). Ca permet d'éviter les shoot-through sans avoir à rajouter une
  tripaille de composants. 100ns de dead time devraient être l'idéal. Si l'AVR
  tourne à 10MHz, ça fait 1 cycle.

- les drivers de MOS sont alimentés en 10V. Si leur alim tombe en-dessous de
  leur UVLO (8V environ), ils se coupent. Ils consomment 1mA à 20kHz. Après il
  faut ajouter la conso des gates des MOS (2mA par MOS environ). Ca fait un
  total de 20mA sur le 10V. Les 47nF sur le 12V donnent une autonomie de 4 à
  5ms avant de tomber en dessous de 10V. Si la tension de batterie tombe
  brusquement, on a donc le temps de voir qu'elle a baissé sous son seuil
  normal, et on peut donc limiter le courant dans les ponts avant que les
  drivers ne se coupent.

- le 10V est fait un peu bizarement, avec deux régu de 5V. Le régu 10V prend
  sa référence par rapport au 5V.

- la référence des MOSFETs est PHK24NQ04LT. Ils ont un Rdson d'environ 5mOhm.

- la référence des drivers de MOS est MAX5063AASA. Ce sont d'excellents
  drivers (rapides, fort courant, délais précis).

En cas de difficultés d'appro pour ce composant, on pourra prendre des IR2010,
de moins bonne facture, mais qui feront l'affaire.

Il faudra peut-etre modifier le soft de manière à alonger le dead time, et il
faudra limiter le courant un peu plus bas (30% environ) pour limiter la
surchauffe due aux moins bonnes performances de ce driver.
