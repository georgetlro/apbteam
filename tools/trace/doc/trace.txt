Trace system
============

The trace system has for job:

  * Create a enumerator with unique identifier to store traces in the flash memory.
  * Dump the flash memory data and print the traces using the string provided by the user in the trace file definition.

Use
---

The trace tool is divided in two parts, the one which generate the enumerator
and the one which interpret the memory data to print it on screen.

To generate the enumerator
~~~~~~~~~~~~~~~~~~~~~~~~~~

python trace.py create [Options] <file in>

Options:

  * -e <enum_id> : enumerator identifier for the source files.
  * -o <outfile> : The output file to write the enumerator.

To interpret the memory data
~~~~~~~~~~~~~~~~~~~~~~~~~~~~

python trace.py inter <file in>

The interpreted data is directly print on the std output.

Trace definition file
---------------------

A trace source example is provided in the example directory.

Time specifications
-------------------

At 14.7456 Mhz.

+---------------+--------+
| Description   |   Time |
+---------------+--------+
| Write         |  10 us |
+---------------+--------+
| Erase 4kB     |  25 ms |
+---------------+--------+
| Erase 32kB    |  25 ms |
+---------------+--------+
| Erase Full    |  50 ms |
+---------------+--------+
| Trace 1 byte  |  10 us |
+---------------+--------+
| Trace 2 bytes |  20 us |
+---------------+--------+
| Trace 4 bytes |  40 us |
+---------------+--------+

